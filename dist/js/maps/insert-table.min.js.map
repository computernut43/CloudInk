{"version":3,"names":[],"mappings":"","sources":["insert-table.js"],"sourcesContent":["'use strict'\n\nconst i18n \t\t\t\t= require( './i18n.min' )\nconst remote \t\t\t= require( 'electron' ).remote\nconst {ipcRenderer} \t= require( 'electron' )\nconst Store\t\t\t\t= require( 'electron-store' )\nconst store\t\t\t\t= new Store()\nconst Mousetrap \t\t= require( 'mousetrap' )\n\nconst $ \t\t\t\t= require( 'jquery' )\nconst jqueryI18next \t= require( 'jquery-i18next' )\n\njqueryI18next.init(i18n, $)\n\nconst log\t\t\t\t= require( 'electron-log' )\n\nconst width = 120, height = 120\n\nlet\tcanvas \t= document.getElementById( 'table' ),\n\tcontext = canvas.getContext( '2d' )\n\n\n//note(dgmid): log exceptions\n\nwindow.onerror = function( error, url, line ) {\n\t\n\tipcRenderer.send( 'error-in-render', {error, url, line} )\n}\n\n\n\n//note(dgmid): set lang & localize strings\n\n$('html').attr('lang', i18n.language)\n$('header').localize()\n$('label').localize()\n$('input').localize()\n$('button').localize()\n\n\n\n//note(dgmid): register kbd shortcut\n\nMousetrap.bind('command+.', function() {\n\t\n\tcloseModal()\n})\n\n\n\n//note(dgmid): close modal\n\nfunction closeModal() {\n\t\n\tconst modal = remote.getCurrentWindow()\n\tmodal.close()\n}\n\n\n\n//note(dgmid): update-theme\n\nipcRenderer.on('set-theme', (event, message) => {\n\t\n\t__setTheme()\n})\n\n\n\nfunction drawCanvas() {\n\t\n\tlet columns = $('#columns').val(),\n\t\trows \t= $('#rows').val()\n\t\n\tcontext.clearRect(1, 1, 118, 118)\n\tcontext.beginPath()\n\t\n\tcontext.moveTo( 120, 120 - 0.5 )\n\tcontext.lineTo( 0.5, 120 - 0.5 )\n\t\n\tcontext.moveTo( 120 - 0.5, 120 )\n\tcontext.lineTo( 120 - 0.5, 0.5 )\n\t\n\tfor ( let x = 0; x <= width; x += (width/columns) ) {\n\t\t\n\t\tcontext.moveTo( 0.5 + Math.floor(x), 0 )\n\t\tcontext.lineTo( 0.5 + Math.floor(x), width )\n\t}\n\n\tfor ( let x = 0; x <= height; x += (height / rows) ) {\n\t\t\n\t\tcontext.moveTo( 0, 0.5 + Math.floor(x) )\n\t\tcontext.lineTo( height, 0.5 + Math.floor(x) )\n\t}\n\t\n\tcontext.strokeStyle = 'black'\n\tcontext.stroke()\n}\n\n\n\n\n\n\n\n\n$(document).ready(function() {\n\t\n\tdrawCanvas()\n\t\n\t$('body').on('keyup input change', 'input[type=\"number\"]', function(event) {\n\t\t\n\t\tif ( event.target.value == '' ) {\n\t\t\t\n\t\t\tevent.target.value = 1\n\t\t\n\t\t} else if( event.target.value > 50 ) {\n\t\t\t\n\t\t\tevent.target.value = 50\n\t\t}\n\t\t\n\t\tdrawCanvas()\n\t})\n\t\n\t//note(dgmid): cancel modal\n\t\n\t$('#cancel').click( function() {\n\t\t\n\t\tcloseModal()\n\t})\n\t\n\t\n\t//note(dgmid): update data\n\t\n\t$('#modal-form').submit( function( e ) {\n\t\t\n\t\te.preventDefault()\n\t\t\n\t\tlet cols = $('#columns').val(),\n\t\t\trows = $('#rows').val()\n\t\t\n\t\tipcRenderer.send( 'table', {\"cols\": cols, \"rows\": rows} )\n\t\tcloseModal()\n\t})\n})\n"],"file":"../insert-table.min.js"}