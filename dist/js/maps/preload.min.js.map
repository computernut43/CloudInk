{"version":3,"names":[],"mappings":"","sources":["preload.js"],"sourcesContent":["'use strict'\n\n// based on: https://gist.github.com/EtienneLem/7e3bc7af2ed75a15eae9006557ef790e#file-preload-js\n\nconst os\t\t\t= require( 'os' ).release()\nconst parts\t\t\t= os.split( '.' )\nconst color\t\t\t= require( 'color' )\nconst Store\t\t\t= require( 'electron-store' )\nconst store\t\t\t= new Store()\n\n// Safe remote initialization with fallback\nlet remote, systemPreferences, nativeTheme\ntry {\n\tremote = require( '@electron/remote' )\n\tsystemPreferences = remote ? remote.systemPreferences : null\n\tnativeTheme = remote ? remote.nativeTheme : null\n\tconsole.log('DEBUG: Preload remote initialized:', !!remote)\n} catch (error) {\n\tconsole.error('DEBUG: Preload remote initialization failed:', error)\n\tremote = null\n\tsystemPreferences = null\n\tnativeTheme = null\n}\n\n\nconst setOSTheme = () => {\n\t\n\t// Don't override accent colors if user has manually selected a theme\n\tif (window.localStorage.user_theme) {\n\t\t// Only update OS theme detection, but preserve user's theme choice\n\t\tlet theme = 'light'\n\t\ttry {\n\t\t\tif (nativeTheme && systemPreferences) {\n\t\t\t\ttheme = nativeTheme.shouldUseDarkColors ? 'dark' : 'light'\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log('DEBUG: Using fallback theme due to:', error.message)\n\t\t}\n\t\t\n\t\tif( parts[0] <= 17 ) { \n\t\t\ttheme = 'light'\n\t\t}\n\t\t\n\t\twindow.localStorage.os_theme = theme\n\t\t\n\t\tif ('__setTheme' in window) {\n\t\t\twindow.__setTheme()\n\t\t}\n\t\treturn\n\t}\n\t\n\t// Fallback theme detection if remote is not available\n\tlet theme = 'light'\n\tlet accent = '0a5fff'\n\t\n\ttry {\n\t\tif (nativeTheme && systemPreferences) {\n\t\t\ttheme = nativeTheme.shouldUseDarkColors ? 'dark' : 'light'\n\t\t\taccent = systemPreferences.getAccentColor().substr(0, 6)\n\t\t}\n\t} catch (error) {\n\t\tconsole.log('DEBUG: Using fallback theme due to:', error.message)\n\t}\n\t\t\n\tif( parts[0] <= 17 ) { \n\t\ttheme = 'light'\n\t\taccent = '0a5fff'\n\t}\n\t\n\tlet light = color('#'+accent).lighten(.15).hex()\n\tlet dark = color('#'+accent).darken(.175).hex()\n\t\n\twindow.localStorage.os_theme = theme\n\twindow.localStorage.accent = `#${accent}`\n\twindow.localStorage.accent_light = light\n\twindow.localStorage.accent_dark = dark\n\n\tif ('__setTheme' in window) {\n\t\twindow.__setTheme()\n\t}\n}\n\n\n// Only subscribe to notifications if systemPreferences is available\nif (systemPreferences) {\n\ttry {\n\t\tsystemPreferences.subscribeNotification(\n\t\t\t'AppleInterfaceThemeChangedNotification',\n\t\t\tsetOSTheme,\n\t\t)\n\t} catch (error) {\n\t\tconsole.log('DEBUG: Could not subscribe to theme notifications:', error.message)\n\t}\n}\n\n\nsetOSTheme()\n"],"file":"../preload.min.js"}